// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20210814195244_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("Price");

                    b.Property<int?>("RestaurantID")
                        .HasColumnType("int");

                    b.Property<int?>("TableID")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("RestaurantID");

                    b.HasIndex("TableID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("WebAPI.Models.Quantity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Quantities")
                        .HasColumnType("int")
                        .HasColumnName("Quantities");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("productName");

                    b.ToTable("Quantity");
                });

            modelBuilder.Entity("WebAPI.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.Property<int>("NumberOfColumns")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfColumns");

                    b.Property<int>("NumberOfRows")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfRows");

                    b.HasKey("ID");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("WebAPI.Models.Table", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Quantities")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Quantities")
                        .IsUnique()
                        .HasFilter("[Quantities] IS NOT NULL");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("WebAPI.Models.Product", b =>
                {
                    b.HasOne("WebAPI.Models.Restaurant", "Restaurant")
                        .WithMany("Products")
                        .HasForeignKey("RestaurantID");

                    b.HasOne("WebAPI.Models.Table", null)
                        .WithMany("Products")
                        .HasForeignKey("TableID");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("WebAPI.Models.Quantity", b =>
                {
                    b.HasOne("WebAPI.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productName");

                    b.Navigation("product");
                });

            modelBuilder.Entity("WebAPI.Models.Table", b =>
                {
                    b.HasOne("WebAPI.Models.Quantity", "Quantity")
                        .WithOne("table")
                        .HasForeignKey("WebAPI.Models.Table", "Quantities");

                    b.HasOne("WebAPI.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quantity");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("WebAPI.Models.Quantity", b =>
                {
                    b.Navigation("table");
                });

            modelBuilder.Entity("WebAPI.Models.Restaurant", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("WebAPI.Models.Table", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
